<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="classeve_1_1Matrix" kind="class" language="C++" prot="public">
    <compoundname>eve::Matrix</compoundname>
    <includes refid="matrix_8h" local="no">matrix.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classeve_1_1Matrix_1a3dc83da5beb31a0a2a1549c236d8ee0f" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float eve::Matrix::m[4][4]</definition>
        <argsstring>[4][4]</argsstring>
        <name>m</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="30" column="1" bodyfile="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classeve_1_1Matrix_1ad6153fae84658c8b89208a21fdf62b7f" prot="public" static="yes" mutable="no">
        <type>const <ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref></type>
        <definition>const Matrix eve::Matrix::Identity</definition>
        <argsstring></argsstring>
        <name>Identity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="32" column="1" bodyfile="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classeve_1_1Matrix_1aa4d582b1e08ecc77c0d485583662a239" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eve::Matrix::Matrix</definition>
        <argsstring>()</argsstring>
        <name>Matrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1Matrix_1a5e5851dde3d5efd48c8ef3d4e7d1a027" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eve::Matrix::Matrix</definition>
        <argsstring>(float m00, float m01, float m02, float m03, float m10, float m11, float m12, float m13, float m20, float m21, float m22, float m23, float m30, float m31, float m32, float m33)</argsstring>
        <name>Matrix</name>
        <param>
          <type>float</type>
          <declname>m00</declname>
        </param>
        <param>
          <type>float</type>
          <declname>m01</declname>
        </param>
        <param>
          <type>float</type>
          <declname>m02</declname>
        </param>
        <param>
          <type>float</type>
          <declname>m03</declname>
        </param>
        <param>
          <type>float</type>
          <declname>m10</declname>
        </param>
        <param>
          <type>float</type>
          <declname>m11</declname>
        </param>
        <param>
          <type>float</type>
          <declname>m12</declname>
        </param>
        <param>
          <type>float</type>
          <declname>m13</declname>
        </param>
        <param>
          <type>float</type>
          <declname>m20</declname>
        </param>
        <param>
          <type>float</type>
          <declname>m21</declname>
        </param>
        <param>
          <type>float</type>
          <declname>m22</declname>
        </param>
        <param>
          <type>float</type>
          <declname>m23</declname>
        </param>
        <param>
          <type>float</type>
          <declname>m30</declname>
        </param>
        <param>
          <type>float</type>
          <declname>m31</declname>
        </param>
        <param>
          <type>float</type>
          <declname>m32</declname>
        </param>
        <param>
          <type>float</type>
          <declname>m33</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="36" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1Matrix_1ab92c02d9819b7e4a4fbdbfef9886c010" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix eve::Matrix::operator+</definition>
        <argsstring>(const Matrix &amp;other) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1Matrix_1ac42c1231bd364d189cd76319bebcd94f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix eve::Matrix::operator-</definition>
        <argsstring>(const Matrix &amp;other) const </argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="43" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1Matrix_1a453cff8ed9e5fb510eaefec0b6c027a6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref></type>
        <definition>Matrix eve::Matrix::operator*</definition>
        <argsstring>(const Matrix &amp;other) const </argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="45" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classeve_1_1Matrix_1ab7fdcc59fcbe9a5185b03ef8504febb1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void eve::Matrix::add</definition>
        <argsstring>(const Matrix &amp;m1, const Matrix &amp;m2, Matrix &amp;dest)</argsstring>
        <name>add</name>
        <param>
          <type>const <ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m1</declname>
        </param>
        <param>
          <type>const <ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m2</declname>
        </param>
        <param>
          <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="47" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1Matrix_1a6d7e2e788e5ebf7b9b88289a6df14ab9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref></type>
        <definition>static Matrix eve::Matrix::add</definition>
        <argsstring>(Matrix &amp;m1, const Matrix &amp;m2)</argsstring>
        <name>add</name>
        <param>
          <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m1</declname>
        </param>
        <param>
          <type>const <ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="49" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1Matrix_1a6c4bf8209d219779ce7b38134a7dd579" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void eve::Matrix::subtract</definition>
        <argsstring>(const Matrix &amp;m1, const Matrix &amp;m2, Matrix &amp;dest)</argsstring>
        <name>subtract</name>
        <param>
          <type>const <ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m1</declname>
        </param>
        <param>
          <type>const <ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m2</declname>
        </param>
        <param>
          <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="51" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1Matrix_1a0b3c948660aea113a9624c60c5c42338" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref></type>
        <definition>static Matrix eve::Matrix::subtract</definition>
        <argsstring>(Matrix &amp;m1, const Matrix &amp;m2)</argsstring>
        <name>subtract</name>
        <param>
          <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m1</declname>
        </param>
        <param>
          <type>const <ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="53" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1Matrix_1aaf46d4ccda8cc02468c2a78b0c0ce46e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void eve::Matrix::multiply</definition>
        <argsstring>(const Matrix &amp;m1, const Matrix &amp;m2, Matrix &amp;dest)</argsstring>
        <name>multiply</name>
        <param>
          <type>const <ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m1</declname>
        </param>
        <param>
          <type>const <ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m2</declname>
        </param>
        <param>
          <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="55" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1Matrix_1a9d90c670bd05e733200900b013259315" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref></type>
        <definition>static Matrix eve::Matrix::multiply</definition>
        <argsstring>(Matrix &amp;m1, const Matrix &amp;m2)</argsstring>
        <name>multiply</name>
        <param>
          <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m1</declname>
        </param>
        <param>
          <type>const <ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="57" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1Matrix_1ad43a7f47649ad1e1c03a1a8225a659e4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void eve::Matrix::transpose</definition>
        <argsstring>(const Matrix &amp;m, Matrix &amp;dest)</argsstring>
        <name>transpose</name>
        <param>
          <type>const <ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <param>
          <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1Matrix_1ac0d114d9029dbdac1f49167886859276" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref></type>
        <definition>static Matrix eve::Matrix::transpose</definition>
        <argsstring>(const Matrix &amp;m)</argsstring>
        <name>transpose</name>
        <param>
          <type>const <ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>m</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="61" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1Matrix_1a2f129a200137fcf746d7eb28ebc4b85b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void eve::Matrix::createOrthographic</definition>
        <argsstring>(const float left, const float right, const float bottom, const float top, const float near, const float far, Matrix &amp;dest)</argsstring>
        <name>createOrthographic</name>
        <param>
          <type>const float</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>right</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>top</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>near</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>far</declname>
        </param>
        <param>
          <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1Matrix_1acce33e61c5256a845e211cb055f463ed" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref></type>
        <definition>static Matrix eve::Matrix::createOrthographic</definition>
        <argsstring>(const float left, const float right, const float bottom, const float top, const float near, const float far)</argsstring>
        <name>createOrthographic</name>
        <param>
          <type>const float</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>right</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>bottom</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>top</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>near</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="75" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1Matrix_1a85d2373e8e9cf9a40e226577273362cd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void eve::Matrix::createPerspectiveFov</definition>
        <argsstring>(const float fov, const float aspect, const float near, const float far, Matrix &amp;dest)</argsstring>
        <name>createPerspectiveFov</name>
        <param>
          <type>const float</type>
          <declname>fov</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>aspect</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>near</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>far</declname>
        </param>
        <param>
          <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="94" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1Matrix_1a925870b135db763fc9b91c05ef7e0771" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref></type>
        <definition>static Matrix eve::Matrix::createPerspectiveFov</definition>
        <argsstring>(const float fov, const float aspect, const float near, const float far)</argsstring>
        <name>createPerspectiveFov</name>
        <param>
          <type>const float</type>
          <declname>fov</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>aspect</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>near</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>far</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="97" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1Matrix_1acde076ac5a61e7056843d5ab26e1ccd7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void eve::Matrix::createRotationX</definition>
        <argsstring>(const float angle, Matrix &amp;dest)</argsstring>
        <name>createRotationX</name>
        <param>
          <type>const float</type>
          <declname>angle</declname>
        </param>
        <param>
          <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1Matrix_1aff6a1ecf9847aac574dbd38967e03f32" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref></type>
        <definition>static Matrix eve::Matrix::createRotationX</definition>
        <argsstring>(const float angle)</argsstring>
        <name>createRotationX</name>
        <param>
          <type>const float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1Matrix_1a2570208b59fc0f2ee7098812cbf54dd1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void eve::Matrix::createRotationY</definition>
        <argsstring>(const float angle, Matrix &amp;dest)</argsstring>
        <name>createRotationY</name>
        <param>
          <type>const float</type>
          <declname>angle</declname>
        </param>
        <param>
          <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="104" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1Matrix_1a4ee2ba5cd2799669cab46392b52d549b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref></type>
        <definition>static Matrix eve::Matrix::createRotationY</definition>
        <argsstring>(const float angle)</argsstring>
        <name>createRotationY</name>
        <param>
          <type>const float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1Matrix_1a27726cd34ff4ac8d42ed285c7459a567" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void eve::Matrix::createRotationZ</definition>
        <argsstring>(const float angle, Matrix &amp;dest)</argsstring>
        <name>createRotationZ</name>
        <param>
          <type>const float</type>
          <declname>angle</declname>
        </param>
        <param>
          <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1Matrix_1a805138e50265dfed18660c6513a11ba6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref></type>
        <definition>static Matrix eve::Matrix::createRotationZ</definition>
        <argsstring>(const float angle)</argsstring>
        <name>createRotationZ</name>
        <param>
          <type>const float</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1Matrix_1ac6c9c65def5b01639c1fe04628b39246" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void eve::Matrix::createTranslation</definition>
        <argsstring>(const float x, const float y, const float z, Matrix &amp;dest)</argsstring>
        <name>createTranslation</name>
        <param>
          <type>const float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1Matrix_1ac282eb0cd4450eb2d5581f456d467a41" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref></type>
        <definition>static Matrix eve::Matrix::createTranslation</definition>
        <argsstring>(const float x, const float y, const float z)</argsstring>
        <name>createTranslation</name>
        <param>
          <type>const float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="114" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1Matrix_1a04d649e2a3ea2543351605277b1082ad" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void eve::Matrix::createScale</definition>
        <argsstring>(const float x, const float y, const float z, Matrix &amp;dest)</argsstring>
        <name>createScale</name>
        <param>
          <type>const float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>z</declname>
        </param>
        <param>
          <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref> &amp;</type>
          <declname>dest</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="116" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1Matrix_1aa2f79f706c1ba4e8c79821fbcc343893" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1Matrix" kindref="compound">Matrix</ref></type>
        <definition>static Matrix eve::Matrix::createScale</definition>
        <argsstring>(const float x, const float y, const float z)</argsstring>
        <name>createScale</name>
        <param>
          <type>const float</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="118" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="42">
        <label>eve::Matrix</label>
        <link refid="classeve_1_1Matrix"/>
        <childnode refid="42" relation="usage">
          <edgelabel>Identity</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" line="26" column="1" bodyfile="/Users/mike/svn/eve/development/trunk/sdk/inc/math/matrix.h" bodystart="26" bodyend="120"/>
    <listofallmembers>
      <member refid="classeve_1_1Matrix_1ab7fdcc59fcbe9a5185b03ef8504febb1" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>add</name></member>
      <member refid="classeve_1_1Matrix_1a6d7e2e788e5ebf7b9b88289a6df14ab9" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>add</name></member>
      <member refid="classeve_1_1Matrix_1a2f129a200137fcf746d7eb28ebc4b85b" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>createOrthographic</name></member>
      <member refid="classeve_1_1Matrix_1acce33e61c5256a845e211cb055f463ed" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>createOrthographic</name></member>
      <member refid="classeve_1_1Matrix_1a85d2373e8e9cf9a40e226577273362cd" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>createPerspectiveFov</name></member>
      <member refid="classeve_1_1Matrix_1a925870b135db763fc9b91c05ef7e0771" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>createPerspectiveFov</name></member>
      <member refid="classeve_1_1Matrix_1acde076ac5a61e7056843d5ab26e1ccd7" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>createRotationX</name></member>
      <member refid="classeve_1_1Matrix_1aff6a1ecf9847aac574dbd38967e03f32" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>createRotationX</name></member>
      <member refid="classeve_1_1Matrix_1a2570208b59fc0f2ee7098812cbf54dd1" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>createRotationY</name></member>
      <member refid="classeve_1_1Matrix_1a4ee2ba5cd2799669cab46392b52d549b" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>createRotationY</name></member>
      <member refid="classeve_1_1Matrix_1a27726cd34ff4ac8d42ed285c7459a567" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>createRotationZ</name></member>
      <member refid="classeve_1_1Matrix_1a805138e50265dfed18660c6513a11ba6" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>createRotationZ</name></member>
      <member refid="classeve_1_1Matrix_1a04d649e2a3ea2543351605277b1082ad" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>createScale</name></member>
      <member refid="classeve_1_1Matrix_1aa2f79f706c1ba4e8c79821fbcc343893" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>createScale</name></member>
      <member refid="classeve_1_1Matrix_1ac6c9c65def5b01639c1fe04628b39246" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>createTranslation</name></member>
      <member refid="classeve_1_1Matrix_1ac282eb0cd4450eb2d5581f456d467a41" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>createTranslation</name></member>
      <member refid="classeve_1_1Matrix_1ad6153fae84658c8b89208a21fdf62b7f" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>Identity</name></member>
      <member refid="classeve_1_1Matrix_1a3dc83da5beb31a0a2a1549c236d8ee0f" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>m</name></member>
      <member refid="classeve_1_1Matrix_1aa4d582b1e08ecc77c0d485583662a239" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>Matrix</name></member>
      <member refid="classeve_1_1Matrix_1a5e5851dde3d5efd48c8ef3d4e7d1a027" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>Matrix</name></member>
      <member refid="classeve_1_1Matrix_1aaf46d4ccda8cc02468c2a78b0c0ce46e" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>multiply</name></member>
      <member refid="classeve_1_1Matrix_1a9d90c670bd05e733200900b013259315" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>multiply</name></member>
      <member refid="classeve_1_1Matrix_1a453cff8ed9e5fb510eaefec0b6c027a6" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>operator*</name></member>
      <member refid="classeve_1_1Matrix_1ab92c02d9819b7e4a4fbdbfef9886c010" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>operator+</name></member>
      <member refid="classeve_1_1Matrix_1ac42c1231bd364d189cd76319bebcd94f" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>operator-</name></member>
      <member refid="classeve_1_1Matrix_1a6c4bf8209d219779ce7b38134a7dd579" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>subtract</name></member>
      <member refid="classeve_1_1Matrix_1a0b3c948660aea113a9624c60c5c42338" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>subtract</name></member>
      <member refid="classeve_1_1Matrix_1ad43a7f47649ad1e1c03a1a8225a659e4" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>transpose</name></member>
      <member refid="classeve_1_1Matrix_1ac0d114d9029dbdac1f49167886859276" prot="public" virt="non-virtual"><scope>eve::Matrix</scope><name>transpose</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
