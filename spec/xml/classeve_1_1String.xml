<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="classeve_1_1String" kind="class" language="C++" prot="public">
    <compoundname>eve::String</compoundname>
    <includes refid="string_8h" local="no">string.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classeve_1_1String_1a03960a2d9450f4c04a104ba17570f22e" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string eve::String::m_string</definition>
        <argsstring></argsstring>
        <name>m_string</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="202" column="1" bodyfile="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" bodystart="202" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classeve_1_1String_1a07a422f02484143c2f17bb2f1925c137" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eve::String::String</definition>
        <argsstring>()</argsstring>
        <name>String</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Creates an empty <ref refid="classeve_1_1String" kindref="compound">String</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="25" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1ad10a30a79c69652bb88c1e54b9f74fb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eve::String::String</definition>
        <argsstring>(const char *string)</argsstring>
        <name>String</name>
        <param>
          <type>const char *</type>
          <declname>string</declname>
        </param>
        <briefdescription>
<para>Creates a <ref refid="classeve_1_1String" kindref="compound">String</ref> from a UTF8 array. </para>        </briefdescription>
        <detaileddescription>
<para>Creates a <ref refid="classeve_1_1String" kindref="compound">String</ref> from a UTF8 char array.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">string</parametername>
</parameternamelist>
<parameterdescription>
<para>UTF8 char array to use for value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="34" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1ad1ca02eaaae85181fe7d35f5d8c7b003" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eve::String::String</definition>
        <argsstring>(const u8 *string, int length)</argsstring>
        <name>String</name>
        <param>
          <type>const <ref refid="types_8h_1a92c50087ca0e64fa93fc59402c55f8ca" kindref="member">u8</ref> *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Creates a <ref refid="classeve_1_1String" kindref="compound">String</ref> from a UTF8 array. </para>        </briefdescription>
        <detaileddescription>
<para>Creates a <ref refid="classeve_1_1String" kindref="compound">String</ref> from a UTF8 byte array.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">string</parametername>
</parameternamelist>
<parameterdescription>
<para>UTF8 byte array to use for value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>Length of the string </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1a9e0ce07fe06eea214c610e963f545fb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eve::String::String</definition>
        <argsstring>(const std::string &amp;string)</argsstring>
        <name>String</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
<para>Creates a <ref refid="classeve_1_1String" kindref="compound">String</ref> from a native string. </para>        </briefdescription>
        <detaileddescription>
<para>Creates a <ref refid="classeve_1_1String" kindref="compound">String</ref> from the platform&apos;s native string representation. e.g. In C++ this is a std::string.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">string</parametername>
</parameternamelist>
<parameterdescription>
<para>Native string to use for value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1a3cc043ee8541673c554e16d48384a156" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eve::String::String</definition>
        <argsstring>(const String &amp;string)</argsstring>
        <name>String</name>
        <param>
          <type>const <ref refid="classeve_1_1String" kindref="compound">String</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1a63c0fa752ef0e9fb772b9de7c8e3b502" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>virtual eve::String::~String</definition>
        <argsstring>()</argsstring>
        <name>~String</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1a805176bef8d45ae876a614a8592f06d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1String" kindref="compound">String</ref> &amp;</type>
        <definition>String&amp; eve::String::operator=</definition>
        <argsstring>(const String &amp;other)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classeve_1_1String" kindref="compound">String</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="60" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1a61b8949ee2994ee4f7a55676ebf91443" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1String" kindref="compound">String</ref></type>
        <definition>String eve::String::operator+</definition>
        <argsstring>(const String &amp;other) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classeve_1_1String" kindref="compound">String</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a new <ref refid="classeve_1_1String" kindref="compound">String</ref> containing this <ref refid="classeve_1_1String" kindref="compound">String</ref> with another appened.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classeve_1_1String" kindref="compound">String</ref> to append. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New appended <ref refid="classeve_1_1String" kindref="compound">String</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="68" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1a63e7795dc766b8a79bc9bb89b2c9fa8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1String" kindref="compound">String</ref> friend</type>
        <definition>String friend eve::String::operator+</definition>
        <argsstring>(const char *chararr, const String &amp;string)</argsstring>
        <name>operator+</name>
        <param>
          <type>const char *</type>
          <declname>chararr</declname>
        </param>
        <param>
          <type>const <ref refid="classeve_1_1String" kindref="compound">String</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="69" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1a1abf9bbcf8b3c5610054fc5db8cb51e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1String" kindref="compound">String</ref> friend</type>
        <definition>String friend eve::String::operator+</definition>
        <argsstring>(const String &amp;string, const char *chararr)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classeve_1_1String" kindref="compound">String</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>chararr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="70" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1ae3b5b8f320dc074926c83d6228e88d90" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string eve::String::native</definition>
        <argsstring>() const </argsstring>
        <name>native</name>
        <briefdescription>
<para>Returns a native representation of this <ref refid="classeve_1_1String" kindref="compound">String</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the value of this string in the platforms native format. e.g. In C++ this is a std::string.</para><para><simplesect kind="return"><para>A native representation of this <ref refid="classeve_1_1String" kindref="compound">String</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="80" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1ae0cd39957ab8d90166ef4235481d79e8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* eve::String::utf8</definition>
        <argsstring>() const </argsstring>
        <name>utf8</name>
        <briefdescription>
<para>Returns a UTF8 array representation of this <ref refid="classeve_1_1String" kindref="compound">String</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the value of this string as a UTF8 char array. This pointer becomes invalid when the string is modified or released.</para><para><simplesect kind="note"><para>This value should not be modified or retained.</para></simplesect>
<simplesect kind="return"><para>UTF8 char array representation of this <ref refid="classeve_1_1String" kindref="compound">String</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="92" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1a1df49dae08bb0f5163801174bba176b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eve::String::append</definition>
        <argsstring>(const String &amp;other)</argsstring>
        <name>append</name>
        <param>
          <type>const <ref refid="classeve_1_1String" kindref="compound">String</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Appends a <ref refid="classeve_1_1String" kindref="compound">String</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Appends another <ref refid="classeve_1_1String" kindref="compound">String</ref> to the end of this <ref refid="classeve_1_1String" kindref="compound">String</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classeve_1_1String" kindref="compound">String</ref> to append. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="101" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1a14c1bb77cf5eec13c0a86518821b3bed" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eve::String::length</definition>
        <argsstring>() const </argsstring>
        <name>length</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the length of this <ref refid="classeve_1_1String" kindref="compound">String</ref>.</para><para><simplesect kind="return"><para>Length of <ref refid="classeve_1_1String" kindref="compound">String</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1a63e69e745286713f035b37e6043a04e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eve::String::isEmpty</definition>
        <argsstring>() const </argsstring>
        <name>isEmpty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns true if this string is empty.</para><para><simplesect kind="return"><para>True if empty else false; </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1aca6728b68fe1a9000f459a8f186d72c1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool eve::String::equal</definition>
        <argsstring>(const String &amp;other) const </argsstring>
        <name>equal</name>
        <param>
          <type>const <ref refid="classeve_1_1String" kindref="compound">String</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tests if two Strings have the same contents.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">other</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classeve_1_1String" kindref="compound">String</ref> to test this one against. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if both string have the same contents. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1aa26425aa0ffa213da94bb1cef6a8c28f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eve::String::indexOf</definition>
        <argsstring>(char c, int start) const </argsstring>
        <name>indexOf</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the index of the first occurrence of the specified character.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>Character to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) Index to start searching from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero based index of the first occurrence, or -1 if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1a1c94856c1a5f43b05ad1b1672bf40942" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eve::String::indexOf</definition>
        <argsstring>(char c) const </argsstring>
        <name>indexOf</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="133" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1a3e90ecb44d0e80874a3e3bbd3df31f68" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eve::String::indexOf</definition>
        <argsstring>(const String &amp;string, int start) const </argsstring>
        <name>indexOf</name>
        <param>
          <type>const <ref refid="classeve_1_1String" kindref="compound">String</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the index of the first occurrence of the specified string.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">string</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classeve_1_1String" kindref="compound">String</ref> to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) Index to start searching from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero based index of the first occurrence, or -1 if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1adf97118516d0511ee6c6ec60c88e8f30" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eve::String::indexOf</definition>
        <argsstring>(const String &amp;string) const </argsstring>
        <name>indexOf</name>
        <param>
          <type>const <ref refid="classeve_1_1String" kindref="compound">String</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1a4435cb59d4597dd1df2c3b07a2e11717" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eve::String::lastIndexOf</definition>
        <argsstring>(char c, int start) const </argsstring>
        <name>lastIndexOf</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the index of the last occurrence of the specified character.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">c</parametername>
</parameternamelist>
<parameterdescription>
<para>Character to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) Index to start searching back from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero based index of the first occurrence, or -1 if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1a8061c5bdf6bd48f5516586d398c79e57" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eve::String::lastIndexOf</definition>
        <argsstring>(char c) const </argsstring>
        <name>lastIndexOf</name>
        <param>
          <type>char</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1ae21888fa378702315744887e2467393c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eve::String::lastIndexOf</definition>
        <argsstring>(const String &amp;string, int start) const </argsstring>
        <name>lastIndexOf</name>
        <param>
          <type>const <ref refid="classeve_1_1String" kindref="compound">String</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the index of the last occurrence of the specified string.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">string</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classeve_1_1String" kindref="compound">String</ref> to search for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">start</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) Index to start searching back from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Zero based index of the first occurrence, or -1 if not found. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1a50de43ac4af38a0d71838f07be857182" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int eve::String::lastIndexOf</definition>
        <argsstring>(const String &amp;string) const </argsstring>
        <name>lastIndexOf</name>
        <param>
          <type>const <ref refid="classeve_1_1String" kindref="compound">String</ref> &amp;</type>
          <declname>string</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="163" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1a1ec608956711ac17768fb444b9368882" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1String" kindref="compound">String</ref></type>
        <definition>String eve::String::slice</definition>
        <argsstring>(int index, int length) const </argsstring>
        <name>slice</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <param>
          <type>int</type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a new <ref refid="classeve_1_1String" kindref="compound">String</ref> containing a substring of this <ref refid="classeve_1_1String" kindref="compound">String</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">index</parametername>
</parameternamelist>
<parameterdescription>
<para>Index to start slice. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">length</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) Number of characters to slice. Default is to slice to the end. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New <ref refid="classeve_1_1String" kindref="compound">String</ref> containing a slice of this <ref refid="classeve_1_1String" kindref="compound">String</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="172" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1a0c36f7154f0dc44da0e92e16658509e0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1String" kindref="compound">String</ref></type>
        <definition>String eve::String::slice</definition>
        <argsstring>(int index) const </argsstring>
        <name>slice</name>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1a746c321363700bd5380b8de21247da10" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1String" kindref="compound">String</ref></type>
        <definition>String eve::String::chop</definition>
        <argsstring>(int count) const </argsstring>
        <name>chop</name>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a new <ref refid="classeve_1_1String" kindref="compound">String</ref> with the last characters removed.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of characters to remove from the end. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New <ref refid="classeve_1_1String" kindref="compound">String</ref> with the last characters removed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="181" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classeve_1_1String_1ae2fce8d6ad8358435e76fc57914e6bbb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1String" kindref="compound">String</ref></type>
        <definition>static String eve::String::valueOf</definition>
        <argsstring>(float v)</argsstring>
        <name>valueOf</name>
        <param>
          <type>float</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a <ref refid="classeve_1_1String" kindref="compound">String</ref> representation of a number.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>[in] Value to convert to a <ref refid="classeve_1_1String" kindref="compound">String</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classeve_1_1String" kindref="compound">String</ref> representation of v. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1a62f4d0c5788858c2d0cd5102aaac94af" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1String" kindref="compound">String</ref></type>
        <definition>static String eve::String::valueOf</definition>
        <argsstring>(double v)</argsstring>
        <name>valueOf</name>
        <param>
          <type>double</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="190" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1a0f8f6539039b38d033b14d4835860a33" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1String" kindref="compound">String</ref></type>
        <definition>static String eve::String::valueOf</definition>
        <argsstring>(i8 v)</argsstring>
        <name>valueOf</name>
        <param>
          <type><ref refid="types_8h_1ae3702327b5f47e83b431e22b33da7b58" kindref="member">i8</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="191" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1a577249304a63156b97985ceb073bda58" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1String" kindref="compound">String</ref></type>
        <definition>static String eve::String::valueOf</definition>
        <argsstring>(i16 v)</argsstring>
        <name>valueOf</name>
        <param>
          <type><ref refid="types_8h_1ad309dbcaeea13aa602d686964156ea0b" kindref="member">i16</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1ab66fe8f3cf1fdec3c9b378dc0679b067" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1String" kindref="compound">String</ref></type>
        <definition>static String eve::String::valueOf</definition>
        <argsstring>(i32 v)</argsstring>
        <name>valueOf</name>
        <param>
          <type><ref refid="types_8h_1a48d6cd8e4135fb2ff7e7f2dac84089ec" kindref="member">i32</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="193" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1a351bc6e175bfcdb2915c6167b6a83574" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1String" kindref="compound">String</ref></type>
        <definition>static String eve::String::valueOf</definition>
        <argsstring>(i64 v)</argsstring>
        <name>valueOf</name>
        <param>
          <type><ref refid="types_8h_1a85cb35fbe5bf2961d7ad5f26814a91a2" kindref="member">i64</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="194" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1a8353f968d3ee1f012320ceeeadf9319e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1String" kindref="compound">String</ref></type>
        <definition>static String eve::String::valueOf</definition>
        <argsstring>(u8 v)</argsstring>
        <name>valueOf</name>
        <param>
          <type><ref refid="types_8h_1a92c50087ca0e64fa93fc59402c55f8ca" kindref="member">u8</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1aa47761625cd80ed1ec310b7bc25cf9ff" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1String" kindref="compound">String</ref></type>
        <definition>static String eve::String::valueOf</definition>
        <argsstring>(u16 v)</argsstring>
        <name>valueOf</name>
        <param>
          <type><ref refid="types_8h_1ace9d960e74685e2cd84b36132dbbf8aa" kindref="member">u16</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1a15e1769445ce8281f57b8f43e6957b00" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1String" kindref="compound">String</ref></type>
        <definition>static String eve::String::valueOf</definition>
        <argsstring>(u32 v)</argsstring>
        <name>valueOf</name>
        <param>
          <type><ref refid="types_8h_1afaa62991928fb9fb18ff0db62a040aba" kindref="member">u32</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1String_1a3778b2b8a6dd9c1e9ebe4f0eb1281672" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classeve_1_1String" kindref="compound">String</ref></type>
        <definition>static String eve::String::valueOf</definition>
        <argsstring>(u64 v)</argsstring>
        <name>valueOf</name>
        <param>
          <type><ref refid="types_8h_1a3f7e2bcbb0b4c338f3c4f6c937cd4234" kindref="member">u64</ref></type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="198" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="74">
        <label>eve::String</label>
        <link refid="classeve_1_1String"/>
        <childnode refid="75" relation="usage">
          <edgelabel>m_string</edgelabel>
        </childnode>
      </node>
      <node id="76">
        <label>std::basic_string&lt; char &gt;</label>
      </node>
      <node id="75">
        <label>std::string</label>
        <childnode refid="76" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" line="18" column="1" bodyfile="/Users/mike/svn/eve/development/trunk/sdk/inc/core/string.h" bodystart="18" bodyend="204"/>
    <listofallmembers>
      <member refid="classeve_1_1String_1a1df49dae08bb0f5163801174bba176b0" prot="public" virt="non-virtual"><scope>eve::String</scope><name>append</name></member>
      <member refid="classeve_1_1String_1a746c321363700bd5380b8de21247da10" prot="public" virt="non-virtual"><scope>eve::String</scope><name>chop</name></member>
      <member refid="classeve_1_1String_1aca6728b68fe1a9000f459a8f186d72c1" prot="public" virt="non-virtual"><scope>eve::String</scope><name>equal</name></member>
      <member refid="classeve_1_1String_1aa26425aa0ffa213da94bb1cef6a8c28f" prot="public" virt="non-virtual"><scope>eve::String</scope><name>indexOf</name></member>
      <member refid="classeve_1_1String_1a1c94856c1a5f43b05ad1b1672bf40942" prot="public" virt="non-virtual"><scope>eve::String</scope><name>indexOf</name></member>
      <member refid="classeve_1_1String_1a3e90ecb44d0e80874a3e3bbd3df31f68" prot="public" virt="non-virtual"><scope>eve::String</scope><name>indexOf</name></member>
      <member refid="classeve_1_1String_1adf97118516d0511ee6c6ec60c88e8f30" prot="public" virt="non-virtual"><scope>eve::String</scope><name>indexOf</name></member>
      <member refid="classeve_1_1String_1a63e69e745286713f035b37e6043a04e0" prot="public" virt="non-virtual"><scope>eve::String</scope><name>isEmpty</name></member>
      <member refid="classeve_1_1String_1a4435cb59d4597dd1df2c3b07a2e11717" prot="public" virt="non-virtual"><scope>eve::String</scope><name>lastIndexOf</name></member>
      <member refid="classeve_1_1String_1a8061c5bdf6bd48f5516586d398c79e57" prot="public" virt="non-virtual"><scope>eve::String</scope><name>lastIndexOf</name></member>
      <member refid="classeve_1_1String_1ae21888fa378702315744887e2467393c" prot="public" virt="non-virtual"><scope>eve::String</scope><name>lastIndexOf</name></member>
      <member refid="classeve_1_1String_1a50de43ac4af38a0d71838f07be857182" prot="public" virt="non-virtual"><scope>eve::String</scope><name>lastIndexOf</name></member>
      <member refid="classeve_1_1String_1a14c1bb77cf5eec13c0a86518821b3bed" prot="public" virt="non-virtual"><scope>eve::String</scope><name>length</name></member>
      <member refid="classeve_1_1String_1a03960a2d9450f4c04a104ba17570f22e" prot="private" virt="non-virtual"><scope>eve::String</scope><name>m_string</name></member>
      <member refid="classeve_1_1String_1ae3b5b8f320dc074926c83d6228e88d90" prot="public" virt="non-virtual"><scope>eve::String</scope><name>native</name></member>
      <member refid="classeve_1_1String_1a61b8949ee2994ee4f7a55676ebf91443" prot="public" virt="non-virtual"><scope>eve::String</scope><name>operator+</name></member>
      <member refid="classeve_1_1String_1a63e7795dc766b8a79bc9bb89b2c9fa8f" prot="public" virt="non-virtual"><scope>eve::String</scope><name>operator+</name></member>
      <member refid="classeve_1_1String_1a1abf9bbcf8b3c5610054fc5db8cb51e7" prot="public" virt="non-virtual"><scope>eve::String</scope><name>operator+</name></member>
      <member refid="classeve_1_1String_1a805176bef8d45ae876a614a8592f06d7" prot="public" virt="non-virtual"><scope>eve::String</scope><name>operator=</name></member>
      <member refid="classeve_1_1String_1a1ec608956711ac17768fb444b9368882" prot="public" virt="non-virtual"><scope>eve::String</scope><name>slice</name></member>
      <member refid="classeve_1_1String_1a0c36f7154f0dc44da0e92e16658509e0" prot="public" virt="non-virtual"><scope>eve::String</scope><name>slice</name></member>
      <member refid="classeve_1_1String_1a07a422f02484143c2f17bb2f1925c137" prot="public" virt="non-virtual"><scope>eve::String</scope><name>String</name></member>
      <member refid="classeve_1_1String_1ad10a30a79c69652bb88c1e54b9f74fb5" prot="public" virt="non-virtual"><scope>eve::String</scope><name>String</name></member>
      <member refid="classeve_1_1String_1ad1ca02eaaae85181fe7d35f5d8c7b003" prot="public" virt="non-virtual"><scope>eve::String</scope><name>String</name></member>
      <member refid="classeve_1_1String_1a9e0ce07fe06eea214c610e963f545fb3" prot="public" virt="non-virtual"><scope>eve::String</scope><name>String</name></member>
      <member refid="classeve_1_1String_1a3cc043ee8541673c554e16d48384a156" prot="public" virt="non-virtual"><scope>eve::String</scope><name>String</name></member>
      <member refid="classeve_1_1String_1ae0cd39957ab8d90166ef4235481d79e8" prot="public" virt="non-virtual"><scope>eve::String</scope><name>utf8</name></member>
      <member refid="classeve_1_1String_1ae2fce8d6ad8358435e76fc57914e6bbb" prot="public" virt="non-virtual"><scope>eve::String</scope><name>valueOf</name></member>
      <member refid="classeve_1_1String_1a62f4d0c5788858c2d0cd5102aaac94af" prot="public" virt="non-virtual"><scope>eve::String</scope><name>valueOf</name></member>
      <member refid="classeve_1_1String_1a0f8f6539039b38d033b14d4835860a33" prot="public" virt="non-virtual"><scope>eve::String</scope><name>valueOf</name></member>
      <member refid="classeve_1_1String_1a577249304a63156b97985ceb073bda58" prot="public" virt="non-virtual"><scope>eve::String</scope><name>valueOf</name></member>
      <member refid="classeve_1_1String_1ab66fe8f3cf1fdec3c9b378dc0679b067" prot="public" virt="non-virtual"><scope>eve::String</scope><name>valueOf</name></member>
      <member refid="classeve_1_1String_1a351bc6e175bfcdb2915c6167b6a83574" prot="public" virt="non-virtual"><scope>eve::String</scope><name>valueOf</name></member>
      <member refid="classeve_1_1String_1a8353f968d3ee1f012320ceeeadf9319e" prot="public" virt="non-virtual"><scope>eve::String</scope><name>valueOf</name></member>
      <member refid="classeve_1_1String_1aa47761625cd80ed1ec310b7bc25cf9ff" prot="public" virt="non-virtual"><scope>eve::String</scope><name>valueOf</name></member>
      <member refid="classeve_1_1String_1a15e1769445ce8281f57b8f43e6957b00" prot="public" virt="non-virtual"><scope>eve::String</scope><name>valueOf</name></member>
      <member refid="classeve_1_1String_1a3778b2b8a6dd9c1e9ebe4f0eb1281672" prot="public" virt="non-virtual"><scope>eve::String</scope><name>valueOf</name></member>
      <member refid="classeve_1_1String_1a63c0fa752ef0e9fb772b9de7c8e3b502" prot="public" virt="virtual"><scope>eve::String</scope><name>~String</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
