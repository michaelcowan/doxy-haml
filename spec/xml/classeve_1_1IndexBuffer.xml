<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="classeve_1_1IndexBuffer" kind="class" language="C++" prot="public">
    <compoundname>eve::IndexBuffer</compoundname>
    <derivedcompoundref refid="classeve_1_1IndexBufferSafe" prot="public" virt="non-virtual">eve::IndexBufferSafe&lt; T &gt;</derivedcompoundref>
    <includes refid="indexbuffer_8h" local="no">indexbuffer.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classeve_1_1IndexBuffer_1a3f1b1a5b4dd5b2ae8edb0412eb00cc9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eve::IndexBuffer::IndexBuffer</definition>
        <argsstring>(const int size, const int count, bool dynamic)</argsstring>
        <name>IndexBuffer</name>
        <param>
          <type>const int</type>
          <declname>size</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>dynamic</declname>
        </param>
        <briefdescription>
<para>Creates an index buffer object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the index element this buffer will hold. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of indices to allocate for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">dynamic</parametername>
</parameternamelist>
<parameterdescription>
<para>True if the buffer is intended to be modified. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/graphics/indexbuffer.h" line="29" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1IndexBuffer_1a146177b35b53a82efbbb1b93f4dc060d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eve::IndexBuffer::~IndexBuffer</definition>
        <argsstring>()</argsstring>
        <name>~IndexBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/graphics/indexbuffer.h" line="31" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1IndexBuffer_1a31cd753409e24bdd379c0cbf07fd2a65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eve::IndexBuffer::setData</definition>
        <argsstring>(const u32 *indices, const int offset, const int count)</argsstring>
        <name>setData</name>
        <param>
          <type>const <ref refid="types_8h_1afaa62991928fb9fb18ff0db62a040aba" kindref="member">u32</ref> *</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
<para>Set the index buffer data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">indices</parametername>
</parameternamelist>
<parameterdescription>
<para>Indices to copy to the index buffer object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination index to start copying to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of indices to copy. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/graphics/indexbuffer.h" line="40" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1IndexBuffer_1a868aa29e4fd084686e0e514a609f5758" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eve::IndexBuffer::setData</definition>
        <argsstring>(const u16 *indices, const int offset, const int count)</argsstring>
        <name>setData</name>
        <param>
          <type>const <ref refid="types_8h_1ace9d960e74685e2cd84b36132dbbf8aa" kindref="member">u16</ref> *</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/graphics/indexbuffer.h" line="42" column="1"/>
      </memberdef>
      <memberdef kind="function" id="classeve_1_1IndexBuffer_1ab2478f1ce0a2ce09b940c9a52f1c957c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void eve::IndexBuffer::setData</definition>
        <argsstring>(const u8 *indices, const int offset, const int count)</argsstring>
        <name>setData</name>
        <param>
          <type>const <ref refid="types_8h_1a92c50087ca0e64fa93fc59402c55f8ca" kindref="member">u8</ref> *</type>
          <declname>indices</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>const int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/graphics/indexbuffer.h" line="44" column="1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classeve_1_1IndexBuffer_1a0acd94ff149b669a5ffa78d44db04c72" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>eve::IndexBuffer::EVE_DECLARE_PIMPL</definition>
        <argsstring>(IndexBuffer)</argsstring>
        <name>EVE_DECLARE_PIMPL</name>
        <param>
          <type><ref refid="classeve_1_1IndexBuffer" kindref="compound">IndexBuffer</ref></type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/graphics/indexbuffer.h" line="48" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="24">
        <label>eve::IndexBuffer</label>
        <link refid="classeve_1_1IndexBuffer"/>
      </node>
      <node id="25">
        <label>eve::IndexBufferSafe&lt; T &gt;</label>
        <link refid="classeve_1_1IndexBufferSafe"/>
        <childnode refid="24" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/Users/mike/svn/eve/development/trunk/sdk/inc/graphics/indexbuffer.h" line="18" column="1" bodyfile="/Users/mike/svn/eve/development/trunk/sdk/inc/graphics/indexbuffer.h" bodystart="18" bodyend="50"/>
    <listofallmembers>
      <member refid="classeve_1_1IndexBuffer_1a0acd94ff149b669a5ffa78d44db04c72" prot="private" virt="non-virtual"><scope>eve::IndexBuffer</scope><name>EVE_DECLARE_PIMPL</name></member>
      <member refid="classeve_1_1IndexBuffer_1a3f1b1a5b4dd5b2ae8edb0412eb00cc9e" prot="public" virt="non-virtual"><scope>eve::IndexBuffer</scope><name>IndexBuffer</name></member>
      <member refid="classeve_1_1IndexBuffer_1a31cd753409e24bdd379c0cbf07fd2a65" prot="public" virt="non-virtual"><scope>eve::IndexBuffer</scope><name>setData</name></member>
      <member refid="classeve_1_1IndexBuffer_1a868aa29e4fd084686e0e514a609f5758" prot="public" virt="non-virtual"><scope>eve::IndexBuffer</scope><name>setData</name></member>
      <member refid="classeve_1_1IndexBuffer_1ab2478f1ce0a2ce09b940c9a52f1c957c" prot="public" virt="non-virtual"><scope>eve::IndexBuffer</scope><name>setData</name></member>
      <member refid="classeve_1_1IndexBuffer_1a146177b35b53a82efbbb1b93f4dc060d" prot="public" virt="non-virtual"><scope>eve::IndexBuffer</scope><name>~IndexBuffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
